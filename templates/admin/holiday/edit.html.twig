{% extends 'base.html.twig' %}

{% block title %}Modifier {{ holiday.name }} - HR Flow{% endblock %}

{% block stylesheets %}
    {{ parent() }}
    <style>
        .holiday-form-container {
            max-width: 800px;
            margin: 0 auto;
            background: #fff;
            border-radius: 12px;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.05);
            overflow: hidden;
        }
        
        .form-header {
            background: linear-gradient(135deg, #f59e0b 0%, #d97706 100%);
            color: white;
            padding: 2rem;
            text-align: center;
            position: relative;
        }
        
        .form-header h1 {
            margin: 0;
            font-size: 1.8rem;
            font-weight: 600;
        }
        
        .form-header p {
            margin: 0.5rem 0 0 0;
            opacity: 0.9;
            font-size: 1rem;
        }
        
        .edit-badge {
            position: absolute;
            top: 1rem;
            right: 1rem;
            background: rgba(255, 255, 255, 0.2);
            padding: 0.5rem 1rem;
            border-radius: 20px;
            font-size: 0.875rem;
            font-weight: 500;
        }
        
        .form-content {
            padding: 2rem;
        }
        
        .form-section {
            margin-bottom: 2rem;
        }
        
        .form-section-title {
            font-size: 1.1rem;
            font-weight: 600;
            color: #374151;
            margin-bottom: 1rem;
            padding-bottom: 0.5rem;
            border-bottom: 2px solid #e5e7eb;
            display: flex;
            align-items: center;
            gap: 0.5rem;
        }
        
        .info-box {
            background: linear-gradient(135deg, #fef3c7 0%, #fde68a 100%);
            border: 2px solid #f59e0b;
            border-radius: 8px;
            padding: 1rem;
            margin-bottom: 1.5rem;
        }
        
        .info-box-title {
            font-weight: 600;
            color: #92400e;
            margin-bottom: 0.5rem;
        }
        
        .info-box-content {
            color: #92400e;
            font-size: 0.95rem;
            line-height: 1.5;
        }
        
        .form-row {
            display: flex;
            gap: 1.5rem;
            margin-bottom: 1.5rem;
        }
        
        .form-group {
            flex: 1;
        }
        
        .form-group.full-width {
            flex: 100%;
        }
        
        .form-label {
            display: block;
            font-weight: 500;
            color: #374151;
            margin-bottom: 0.5rem;
            font-size: 0.95rem;
        }
        
        .form-label.required::after {
            content: ' *';
            color: #ef4444;
        }
        
        .form-control {
            width: 100%;
            padding: 0.75rem;
            border: 2px solid #d1d5db;
            border-radius: 8px;
            font-size: 1rem;
            transition: all 0.2s ease;
            background-color: #fff;
        }
        
        .form-control:focus {
            outline: none;
            border-color: #f59e0b;
            box-shadow: 0 0 0 3px rgba(245, 158, 11, 0.1);
        }
        
        .form-control:invalid {
            border-color: #ef4444;
        }
        
        .form-control.modified {
            border-color: #10b981;
            background-color: #ecfdf5;
        }
        
        .form-check {
            display: flex;
            align-items: center;
            gap: 0.75rem;
            padding: 1rem;
            background: #f9fafb;
            border-radius: 8px;
            border: 2px solid #e5e7eb;
            transition: all 0.2s ease;
        }
        
        .form-check:hover {
            background: #f3f4f6;
            border-color: #d1d5db;
        }
        
        .form-check.modified {
            background: #ecfdf5;
            border-color: #10b981;
        }
        
        .form-check input[type="checkbox"] {
            width: 18px;
            height: 18px;
            accent-color: #f59e0b;
        }
        
        .form-check-label {
            font-weight: 500;
            color: #374151;
            cursor: pointer;
            margin: 0;
        }
        
        .form-help {
            font-size: 0.875rem;
            color: #6b7280;
            margin-top: 0.5rem;
        }
        
        .form-actions {
            display: flex;
            gap: 1rem;
            justify-content: space-between;
            align-items: center;
            padding-top: 2rem;
            border-top: 2px solid #e5e7eb;
        }
        
        .btn {
            padding: 0.75rem 1.5rem;
            border-radius: 8px;
            font-weight: 500;
            text-decoration: none;
            display: inline-flex;
            align-items: center;
            gap: 0.5rem;
            transition: all 0.2s ease;
            cursor: pointer;
            border: none;
            font-size: 1rem;
        }
        
        .btn-primary {
            background: linear-gradient(135deg, #f59e0b 0%, #d97706 100%);
            color: white;
        }
        
        .btn-primary:hover {
            transform: translateY(-1px);
            box-shadow: 0 8px 16px rgba(245, 158, 11, 0.3);
        }
        
        .btn-secondary {
            background: #f3f4f6;
            color: #374151;
            border: 2px solid #d1d5db;
        }
        
        .btn-secondary:hover {
            background: #e5e7eb;
            border-color: #9ca3af;
        }
        
        .btn-danger {
            background: #ef4444;
            color: white;
        }
        
        .btn-danger:hover {
            background: #dc2626;
            transform: translateY(-1px);
            box-shadow: 0 8px 16px rgba(239, 68, 68, 0.3);
        }
        
        .alert {
            padding: 1rem;
            border-radius: 8px;
            margin-bottom: 1.5rem;
        }
        
        .alert-danger {
            background: #fef2f2;
            border: 2px solid #fecaca;
            color: #dc2626;
        }
        
        .alert-warning {
            background: #fffbeb;
            border: 2px solid #fed7aa;
            color: #d97706;
        }
        
        .form-errors {
            background: #fef2f2;
            border: 2px solid #fecaca;
            border-radius: 8px;
            padding: 1rem;
            margin-bottom: 1.5rem;
        }
        
        .form-errors ul {
            margin: 0;
            padding-left: 1.5rem;
            color: #dc2626;
        }
        
        .breadcrumb {
            background: transparent;
            padding: 1rem 0;
            margin-bottom: 1rem;
        }
        
        .breadcrumb-item {
            color: #6b7280;
        }
        
        .breadcrumb-item.active {
            color: #374151;
            font-weight: 500;
        }
        
        .breadcrumb-item + .breadcrumb-item::before {
            content: '>';
            margin: 0 0.5rem;
            color: #9ca3af;
        }
        
        .modification-indicator {
            display: none;
            background: #10b981;
            color: white;
            padding: 0.25rem 0.75rem;
            border-radius: 12px;
            font-size: 0.75rem;
            margin-left: 0.5rem;
            animation: pulse 2s infinite;
        }
        
        @keyframes pulse {
            0%, 100% { opacity: 1; }
            50% { opacity: 0.7; }
        }
        
        @media (max-width: 768px) {
            .holiday-form-container {
                margin: 1rem;
                border-radius: 8px;
            }
            
            .form-content {
                padding: 1.5rem;
            }
            
            .form-header {
                padding: 1.5rem;
            }
            
            .edit-badge {
                position: static;
                margin-top: 1rem;
                display: inline-block;
            }
            
            .form-row {
                flex-direction: column;
                gap: 0;
            }
            
            .form-actions {
                flex-direction: column-reverse;
                gap: 1rem;
            }
            
            .btn {
                width: 100%;
                justify-content: center;
            }
        }
    </style>
{% endblock %}

{% block body %}
<div class="container-fluid py-4">
    <!-- Fil d'Ariane -->
    <nav aria-label="breadcrumb">
        <ol class="breadcrumb">
            <li class="breadcrumb-item"><a href="{{ path('admin_dashboard') }}">Tableau de bord</a></li>
            <li class="breadcrumb-item"><a href="{{ path('admin_holiday_index') }}">Jours fériés</a></li>
            <li class="breadcrumb-item"><a href="{{ path('admin_holiday_show', {'id': holiday.id}) }}">{{ holiday.name }}</a></li>
            <li class="breadcrumb-item active" aria-current="page">Modifier</li>
        </ol>
    </nav>

    <div class="holiday-form-container">
        <!-- En-tête du formulaire -->
        <div class="form-header">
            <div class="edit-badge">✏️ Mode édition</div>
            <h1>Modifier le jour férié</h1>
            <p>{{ holiday.name }} - {{ holiday.date|date('d/m/Y') }}</p>
        </div>

        <!-- Contenu du formulaire -->
        <div class="form-content">
            <!-- Affichage des erreurs globales -->
            {% if form.vars.errors|length > 0 %}
                <div class="form-errors">
                    <strong>⚠️ Erreurs détectées :</strong>
                    <ul>
                        {% for error in form.vars.errors %}
                            <li>{{ error.message }}</li>
                        {% endfor %}
                    </ul>
                </div>
            {% endif %}

            <!-- Informations sur le jour férié -->
            <div class="info-box">
                <div class="info-box-title">📊 Informations actuelles</div>
                <div class="info-box-content">
                    <strong>Créé le :</strong> {{ holiday.createdAt|date('d/m/Y à H:i') }}<br>
                    {% if holiday.isRecurring %}
                        <strong>Type :</strong> Récurrent (se répète chaque année)<br>
                    {% else %}
                        <strong>Type :</strong> Ponctuel<br>
                    {% endif %}
                    <strong>Statut :</strong> 
                    {% if holiday.isActive %}
                        <span style="color: #10b981;">✅ Actif</span>
                    {% else %}
                        <span style="color: #ef4444;">❌ Inactif</span>
                    {% endif %}
                </div>
            </div>

            <!-- Alerte pour les modifications sensibles -->
            {% if holiday.date < date() %}
                <div class="alert alert-warning">
                    <strong>⚠️ Attention :</strong> Ce jour férié est daté dans le passé. Toute modification pourrait affecter les calculs de congés déjà effectués.
                </div>
            {% endif %}

            {{ form_start(form, {'attr': {'novalidate': 'novalidate', 'id': 'holiday-edit-form'}}) }}

            <!-- Section : Informations principales -->
            <div class="form-section">
                <h3 class="form-section-title">
                    📝 Informations principales
                    <span class="modification-indicator" id="main-info-indicator">Modifié</span>
                </h3>
                
                <div class="form-row">
                    <div class="form-group">
                        {{ form_label(form.name, 'Nom du jour férié', {'label_attr': {'class': 'form-label required'}}) }}
                        {{ form_widget(form.name, {'attr': {'class': 'form-control', 'placeholder': 'Ex: Fête du Travail', 'data-original': holiday.name}}) }}
                        {% if form.name.vars.errors|length > 0 %}
                            <div class="form-help text-danger">
                                {% for error in form.name.vars.errors %}
                                    {{ error.message }}
                                {% endfor %}
                            </div>
                        {% endif %}
                        <div class="form-help">Donnez un nom explicite au jour férié</div>
                    </div>

                    <div class="form-group">
                        {{ form_label(form.date, 'Date', {'label_attr': {'class': 'form-label required'}}) }}
                        {{ form_widget(form.date, {'attr': {'class': 'form-control', 'data-original': holiday.date|date('Y-m-d')}}) }}
                        {% if form.date.vars.errors|length > 0 %}
                            <div class="form-help text-danger">
                                {% for error in form.date.vars.errors %}
                                    {{ error.message }}
                                {% endfor %}
                            </div>
                        {% endif %}
                        <div class="form-help">Sélectionnez la date du jour férié</div>
                    </div>
                </div>

                <div class="form-row">
                    <div class="form-group full-width">
                        {{ form_label(form.description, 'Description', {'label_attr': {'class': 'form-label'}}) }}
                        {{ form_widget(form.description, {'attr': {'class': 'form-control', 'rows': 3, 'placeholder': 'Description optionnelle du jour férié...', 'data-original': holiday.description}}) }}
                        {% if form.description.vars.errors|length > 0 %}
                            <div class="form-help text-danger">
                                {% for error in form.description.vars.errors %}
                                    {{ error.message }}
                                {% endfor %}
                            </div>
                        {% endif %}
                        <div class="form-help">Ajoutez une description optionnelle pour plus de contexte</div>
                    </div>
                </div>
            </div>

            <!-- Section : Paramètres -->
            <div class="form-section">
                <h3 class="form-section-title">
                    ⚙️ Paramètres
                    <span class="modification-indicator" id="settings-indicator">Modifié</span>
                </h3>
                
                <div class="form-row">
                    <div class="form-group">
                        <div class="form-check" data-original="{{ holiday.isRecurring ? 'true' : 'false' }}">
                            {{ form_widget(form.isRecurring) }}
                            {{ form_label(form.isRecurring, 'Jour férié récurrent', {'label_attr': {'class': 'form-check-label'}}) }}
                        </div>
                        {% if form.isRecurring.vars.errors|length > 0 %}
                            <div class="form-help text-danger">
                                {% for error in form.isRecurring.vars.errors %}
                                    {{ error.message }}
                                {% endfor %}
                            </div>
                        {% endif %}
                        <div class="form-help">Si coché, ce jour férié se répétera chaque année à la même date</div>
                    </div>

                    <div class="form-group">
                        <div class="form-check" data-original="{{ holiday.isActive ? 'true' : 'false' }}">
                            {{ form_widget(form.isActive) }}
                            {{ form_label(form.isActive, 'Actif', {'label_attr': {'class': 'form-check-label'}}) }}
                        </div>
                        {% if form.isActive.vars.errors|length > 0 %}
                            <div class="form-help text-danger">
                                {% for error in form.isActive.vars.errors %}
                                    {{ error.message }}
                                {% endfor %}
                            </div>
                        {% endif %}
                        <div class="form-help">Décochez pour désactiver temporairement ce jour férié</div>
                    </div>
                </div>
            </div>

            <!-- Actions du formulaire -->
            <div class="form-actions">
                <div style="display: flex; gap: 1rem;">
                    <a href="{{ path('admin_holiday_show', {'id': holiday.id}) }}" class="btn btn-secondary">
                        ← Retour
                    </a>
                    <a href="{{ path('admin_holiday_index') }}" class="btn btn-secondary">
                        📋 Liste complète
                    </a>
                </div>
                
                <div style="display: flex; gap: 1rem;">
                    <button type="button" id="reset-btn" class="btn btn-secondary" style="display: none;">
                        🔄 Annuler les modifications
                    </button>
                    <button type="submit" name="save" class="btn btn-primary">
                        💾 Enregistrer les modifications
                    </button>
                </div>
            </div>

            {{ form_end(form) }}
        </div>
    </div>
</div>
{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Animation d'entrée
            const container = document.querySelector('.holiday-form-container');
            container.style.opacity = '0';
            container.style.transform = 'translateY(20px)';
            
            setTimeout(() => {
                container.style.transition = 'all 0.5s ease';
                container.style.opacity = '1';
                container.style.transform = 'translateY(0)';
            }, 100);

            // Éléments du formulaire
            const form = document.querySelector('#holiday-edit-form');
            const nameInput = document.querySelector('#{{ form.name.vars.id }}');
            const dateInput = document.querySelector('#{{ form.date.vars.id }}');
            const descriptionInput = document.querySelector('#{{ form.description.vars.id }}');
            const recurringCheckbox = document.querySelector('#{{ form.isRecurring.vars.id }}');
            const activeCheckbox = document.querySelector('#{{ form.isActive.vars.id }}');
            const resetBtn = document.querySelector('#reset-btn');
            
            // Indicateurs de modification
            const mainInfoIndicator = document.querySelector('#main-info-indicator');
            const settingsIndicator = document.querySelector('#settings-indicator');
            
            let hasChanges = false;
            const originalValues = {};

            // Stocker les valeurs originales
            function storeOriginalValues() {
                if (nameInput) originalValues.name = nameInput.value;
                if (dateInput) originalValues.date = dateInput.value;
                if (descriptionInput) originalValues.description = descriptionInput.value;
                if (recurringCheckbox) originalValues.isRecurring = recurringCheckbox.checked;
                if (activeCheckbox) originalValues.isActive = activeCheckbox.checked;
            }

            // Vérifier les modifications
            function checkForChanges() {
                let mainInfoChanged = false;
                let settingsChanged = false;
                hasChanges = false;

                if (nameInput && nameInput.value !== originalValues.name) {
                    nameInput.classList.add('modified');
                    mainInfoChanged = true;
                    hasChanges = true;
                } else if (nameInput) {
                    nameInput.classList.remove('modified');
                }

                if (dateInput && dateInput.value !== originalValues.date) {
                    dateInput.classList.add('modified');
                    mainInfoChanged = true;
                    hasChanges = true;
                } else if (dateInput) {
                    dateInput.classList.remove('modified');
                }

                if (descriptionInput && descriptionInput.value !== originalValues.description) {
                    descriptionInput.classList.add('modified');
                    mainInfoChanged = true;
                    hasChanges = true;
                } else if (descriptionInput) {
                    descriptionInput.classList.remove('modified');
                }

                if (recurringCheckbox && recurringCheckbox.checked !== originalValues.isRecurring) {
                    recurringCheckbox.closest('.form-check').classList.add('modified');
                    settingsChanged = true;
                    hasChanges = true;
                } else if (recurringCheckbox) {
                    recurringCheckbox.closest('.form-check').classList.remove('modified');
                }

                if (activeCheckbox && activeCheckbox.checked !== originalValues.isActive) {
                    activeCheckbox.closest('.form-check').classList.add('modified');
                    settingsChanged = true;
                    hasChanges = true;
                } else if (activeCheckbox) {
                    activeCheckbox.closest('.form-check').classList.remove('modified');
                }

                // Afficher/masquer les indicateurs
                if (mainInfoChanged) {
                    mainInfoIndicator.style.display = 'inline-block';
                } else {
                    mainInfoIndicator.style.display = 'none';
                }

                if (settingsChanged) {
                    settingsIndicator.style.display = 'inline-block';
                } else {
                    settingsIndicator.style.display = 'none';
                }

                // Afficher/masquer le bouton reset
                if (hasChanges) {
                    resetBtn.style.display = 'inline-flex';
                } else {
                    resetBtn.style.display = 'none';
                }
            }

            // Fonction de reset
            function resetForm() {
                if (nameInput) nameInput.value = originalValues.name;
                if (dateInput) dateInput.value = originalValues.date;
                if (descriptionInput) descriptionInput.value = originalValues.description;
                if (recurringCheckbox) recurringCheckbox.checked = originalValues.isRecurring;
                if (activeCheckbox) activeCheckbox.checked = originalValues.isActive;
                
                checkForChanges();
            }

            // Initialisation
            storeOriginalValues();

            // Événements de changement
            if (nameInput) nameInput.addEventListener('input', checkForChanges);
            if (dateInput) dateInput.addEventListener('change', checkForChanges);
            if (descriptionInput) descriptionInput.addEventListener('input', checkForChanges);
            if (recurringCheckbox) recurringCheckbox.addEventListener('change', checkForChanges);
            if (activeCheckbox) activeCheckbox.addEventListener('change', checkForChanges);

            // Bouton reset
            resetBtn.addEventListener('click', function() {
                if (confirm('🔄 Êtes-vous sûr de vouloir annuler toutes les modifications ?')) {
                    resetForm();
                }
            });

            // Validation de la date
            if (dateInput) {
                dateInput.addEventListener('change', function() {
                    const selectedDate = new Date(this.value);
                    const today = new Date();
                    today.setHours(0, 0, 0, 0);

                    if (selectedDate < today) {
                        if (!confirm('⚠️ Attention : Vous avez sélectionné une date passée. Cela pourrait affecter les calculs de congés. Continuer ?')) {
                            this.value = originalValues.date;
                            checkForChanges();
                        }
                    }
                });
            }

            // Confirmation avant soumission
            form.addEventListener('submit', function(e) {
                if (!hasChanges) {
                    e.preventDefault();
                    alert('ℹ️ Aucune modification détectée.');
                    return;
                }

                const submitBtn = form.querySelector('button[type="submit"]');
                submitBtn.innerHTML = '⏳ Enregistrement...';
                submitBtn.disabled = true;
            });

            // Avertissement avant fermeture si modifications non sauvées
            window.addEventListener('beforeunload', function(e) {
                if (hasChanges) {
                    e.preventDefault();
                    e.returnValue = 'Vous avez des modifications non sauvegardées. Êtes-vous sûr de vouloir quitter ?';
                    return e.returnValue;
                }
            });

            // Auto-focus sur le premier champ
            if (nameInput) {
                nameInput.focus();
                nameInput.select();
            }
        });
    </script>
{% endblock %}