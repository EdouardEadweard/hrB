{% extends 'base.html.twig' %}

{% block title %}Modifier {{ department.name }} - HR Flow{% endblock %}

{% block stylesheets %}
    {{ parent() }}
    <style>
        .card {
            border: none;
            border-radius: 12px;
            box-shadow: 0 4px 20px rgba(0, 0, 0, 0.08);
        }
        
        .card-header {
            background: linear-gradient(135deg, #f093fb 0%, #f5576c 100%);
            color: white;
            border-radius: 12px 12px 0 0 !important;
            padding: 1.5rem;
        }
        
        .form-control, .form-select {
            border: 2px solid #e9ecef;
            border-radius: 8px;
            padding: 0.75rem 1rem;
            transition: all 0.3s ease;
            font-size: 0.95rem;
        }
        
        .form-control:focus, .form-select:focus {
            border-color: #f5576c;
            box-shadow: 0 0 0 0.2rem rgba(245, 87, 108, 0.25);
        }
        
        .form-label {
            font-weight: 600;
            color: #495057;
            margin-bottom: 0.5rem;
        }
        
        .btn-primary {
            background: linear-gradient(135deg, #f093fb 0%, #f5576c 100%);
            border: none;
            border-radius: 8px;
            padding: 0.75rem 2rem;
            font-weight: 600;
            transition: all 0.3s ease;
        }
        
        .btn-primary:hover {
            transform: translateY(-2px);
            box-shadow: 0 8px 25px rgba(245, 87, 108, 0.3);
        }
        
        .btn-secondary {
            border: 2px solid #6c757d;
            border-radius: 8px;
            padding: 0.75rem 2rem;
            font-weight: 600;
            transition: all 0.3s ease;
        }
        
        .btn-secondary:hover {
            transform: translateY(-2px);
        }
        
        .btn-danger {
            border-radius: 8px;
            padding: 0.75rem 2rem;
            font-weight: 600;
            transition: all 0.3s ease;
        }
        
        .btn-danger:hover {
            transform: translateY(-2px);
        }
        
        .breadcrumb {
            background: transparent;
            padding: 0;
            margin-bottom: 2rem;
        }
        
        .breadcrumb-item a {
            color: #f5576c;
            text-decoration: none;
        }
        
        .breadcrumb-item a:hover {
            text-decoration: underline;
        }
        
        .required-field::after {
            content: " *";
            color: #dc3545;
            font-weight: bold;
        }
        
        .form-help {
            font-size: 0.875rem;
            color: #6c757d;
            margin-top: 0.25rem;
        }
        
        .alert {
            border: none;
            border-radius: 8px;
            padding: 1rem 1.5rem;
        }
        
        .page-header {
            margin-bottom: 2rem;
        }
        
        .page-title {
            color: #2d3748;
            font-weight: 700;
            margin: 0;
        }
        
        .page-subtitle {
            color: #718096;
            margin-top: 0.5rem;
        }
        
        .info-card {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            border-radius: 12px;
            color: white;
            padding: 1.5rem;
            margin-bottom: 2rem;
        }
        
        .info-card h5 {
            margin-bottom: 1rem;
            font-weight: 600;
        }
        
        .info-item {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 0.5rem 0;
            border-bottom: 1px solid rgba(255, 255, 255, 0.2);
        }
        
        .info-item:last-child {
            border-bottom: none;
        }
        
        .status-badge {
            padding: 0.25rem 0.75rem;
            border-radius: 20px;
            font-size: 0.875rem;
            font-weight: 600;
        }
        
        .status-active {
            background-color: #28a745;
            color: white;
        }
        
        .status-inactive {
            background-color: #6c757d;
            color: white;
        }
        
        .changed-field {
            position: relative;
        }
        
        .changed-field::before {
            content: "";
            position: absolute;
            left: -10px;
            top: 50%;
            transform: translateY(-50%);
            width: 4px;
            height: 100%;
            background: #ffc107;
            border-radius: 2px;
        }
        
        .action-buttons {
            background: #f8f9fa;
            padding: 1.5rem;
            border-radius: 0 0 12px 12px;
            border-top: 1px solid #e9ecef;
        }
    </style>
{% endblock %}

{% block body %}
<div class="container-fluid py-4">
    <!-- Breadcrumb -->
    <nav aria-label="breadcrumb">
        <ol class="breadcrumb">
            <li class="breadcrumb-item">
                <a href="{{ path('app_dashboard') }}">
                    <i class="fas fa-home me-1"></i>Tableau de bord
                </a>
            </li>
            <li class="breadcrumb-item">
                <a href="{{ path('admin_department_index') }}">Départements</a>
            </li>
            <li class="breadcrumb-item">
                <a href="{{ path('admin_department_show', {'id': department.id}) }}">{{ department.name }}</a>
            </li>
            <li class="breadcrumb-item active" aria-current="page">Modifier</li>
        </ol>
    </nav>

    <!-- Page Header -->
    <div class="page-header">
        <h1 class="page-title">
            <i class="fas fa-edit me-3"></i>Modifier le département
        </h1>
        <p class="page-subtitle">
            Modifiez les informations du département "{{ department.name }}"
        </p>
    </div>

    <div class="row">
        <!-- Informations actuelles -->
        <div class="col-lg-4 mb-4">
            <div class="info-card">
                <h5><i class="fas fa-info-circle me-2"></i>Informations actuelles</h5>
                
                <div class="info-item">
                    <span><i class="fas fa-building me-2"></i>Nom</span>
                    <strong>{{ department.name }}</strong>
                </div>
                
                <div class="info-item">
                    <span><i class="fas fa-tag me-2"></i>Code</span>
                    <strong>{{ department.code }}</strong>
                </div>
                
                <div class="info-item">
                    <span><i class="fas fa-user-tie me-2"></i>Manager</span>
                    <span>
                        {% if department.manager %}
                            {{ department.manager.firstName }} {{ department.manager.lastName }}
                        {% else %}
                            <em>Aucun</em>
                        {% endif %}
                    </span>
                </div>
                
                <div class="info-item">
                    <span><i class="fas fa-toggle-on me-2"></i>Statut</span>
                    <span class="status-badge {{ department.isActive ? 'status-active' : 'status-inactive' }}">
                        {{ department.isActive ? 'Actif' : 'Inactif' }}
                    </span>
                </div>
                
                <div class="info-item">
                    <span><i class="fas fa-calendar me-2"></i>Créé le</span>
                    <span>{{ department.createdAt|date('d/m/Y à H:i') }}</span>
                </div>
                
                {% if department.updatedAt %}
                <div class="info-item">
                    <span><i class="fas fa-clock me-2"></i>Modifié le</span>
                    <span>{{ department.updatedAt|date('d/m/Y à H:i') }}</span>
                </div>
                {% endif %}
            </div>
        </div>

        <!-- Formulaire de modification -->
        <div class="col-lg-8">
            <div class="card">
                <div class="card-header">
                    <h4 class="mb-0">
                        <i class="fas fa-pencil-alt me-2"></i>
                        Modifier les informations
                    </h4>
                </div>
                
                <div class="card-body p-4">
                    <!-- Messages flash -->
                    {% for flashError in app.flashes('error') %}
                        <div class="alert alert-danger alert-dismissible fade show" role="alert">
                            <i class="fas fa-exclamation-triangle me-2"></i>
                            {{ flashError }}
                            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                        </div>
                    {% endfor %}

                    {% for flashSuccess in app.flashes('success') %}
                        <div class="alert alert-success alert-dismissible fade show" role="alert">
                            <i class="fas fa-check-circle me-2"></i>
                            {{ flashSuccess }}
                            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                        </div>
                    {% endfor %}

                    {{ form_start(form, {'attr': {'novalidate': 'novalidate', 'class': 'needs-validation', 'id': 'editForm'}}) }}
                    
                    <!-- Nom du département -->
                    <div class="mb-4">
                        {{ form_label(form.name, 'Nom du département', {'label_attr': {'class': 'form-label required-field'}}) }}
                        {{ form_widget(form.name, {'attr': {
                            'class': 'form-control',
                            'placeholder': 'Ex: Ressources Humaines',
                            'required': true,
                            'data-original': department.name
                        }}) }}
                        <div class="form-help">
                            Le nom complet du département tel qu'il apparaîtra dans l'application
                        </div>
                        {{ form_errors(form.name) }}
                    </div>

                    <!-- Code du département -->
                    <div class="mb-4">
                        {{ form_label(form.code, 'Code du département', {'label_attr': {'class': 'form-label required-field'}}) }}
                        {{ form_widget(form.code, {'attr': {
                            'class': 'form-control',
                            'placeholder': 'Ex: RH',
                            'maxlength': 10,
                            'style': 'text-transform: uppercase;',
                            'required': true,
                            'data-original': department.code
                        }}) }}
                        <div class="form-help">
                            Code court et unique du département (maximum 10 caractères)
                        </div>
                        <div class="form-help text-warning">
                            <i class="fas fa-exclamation-triangle me-1"></i>
                            Attention : Modifier le code peut affecter les rapports existants
                        </div>
                        {{ form_errors(form.code) }}
                    </div>

                    <!-- Description -->
                    <div class="mb-4">
                        {{ form_label(form.description, 'Description', {'label_attr': {'class': 'form-label'}}) }}
                        {{ form_widget(form.description, {'attr': {
                            'class': 'form-control',
                            'rows': 4,
                            'placeholder': 'Description détaillée du département et de ses responsabilités...',
                            'data-original': department.description
                        }}) }}
                        <div class="form-help">
                            Description optionnelle du rôle et des responsabilités du département
                        </div>
                        {{ form_errors(form.description) }}
                    </div>

                    <!-- Chef de département -->
                    <div class="mb-4">
                        {{ form_label(form.manager, 'Chef de département', {'label_attr': {'class': 'form-label'}}) }}
                        {{ form_widget(form.manager, {'attr': {
                            'class': 'form-select',
                            'data-original': department.manager ? department.manager.id : ''
                        }}) }}
                        <div class="form-help">
                            Sélectionnez le responsable qui dirigera ce département (optionnel)
                        </div>
                        {% if department.manager %}
                        <div class="form-help text-info">
                            <i class="fas fa-info-circle me-1"></i>
                            Manager actuel : {{ department.manager.firstName }} {{ department.manager.lastName }}
                        </div>
                        {% endif %}
                        {{ form_errors(form.manager) }}
                    </div>

                    <!-- Statut actif -->
                    <div class="mb-4">
                        <div class="form-check form-switch">
                            {{ form_widget(form.isActive, {'attr': {
                                'class': 'form-check-input',
                                'role': 'switch',
                                'data-original': department.isActive ? '1' : '0'
                            }}) }}
                            {{ form_label(form.isActive, 'Département actif', {'label_attr': {'class': 'form-check-label'}}) }}
                        </div>
                        <div class="form-help">
                            Un département inactif ne sera pas visible aux employés
                        </div>
                        {% if not department.isActive %}
                        <div class="form-help text-warning">
                            <i class="fas fa-exclamation-triangle me-1"></i>
                            Ce département est actuellement inactif
                        </div>
                        {% endif %}
                        {{ form_errors(form.isActive) }}
                    </div>

                    {{ form_end(form) }}
                </div>

                <!-- Action Buttons -->
                <div class="action-buttons">
                    <div class="d-flex justify-content-between align-items-center">
                        <div>
                            <a href="{{ path('admin_department_show', {'id': department.id}) }}" 
                               class="btn btn-secondary me-2">
                                <i class="fas fa-arrow-left me-2"></i>
                                Annuler
                            </a>
                            
                            <a href="{{ path('admin_department_index') }}" 
                               class="btn btn-outline-secondary">
                                <i class="fas fa-list me-2"></i>
                                Liste des départements
                            </a>
                        </div>
                        
                        <div>
                            <button type="button" class="btn btn-danger me-2" 
                                    data-bs-toggle="modal" data-bs-target="#deleteModal">
                                <i class="fas fa-trash me-2"></i>
                                Supprimer
                            </button>
                            
                            <button type="submit" form="editForm" class="btn btn-primary" id="saveBtn">
                                <i class="fas fa-save me-2"></i>
                                Enregistrer les modifications
                            </button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Modal de confirmation de suppression -->
<div class="modal fade" id="deleteModal" tabindex="-1" aria-labelledby="deleteModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header border-0">
                <h5 class="modal-title" id="deleteModalLabel">
                    <i class="fas fa-exclamation-triangle text-danger me-2"></i>
                    Confirmer la suppression
                </h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <p class="mb-3">
                    Êtes-vous sûr de vouloir supprimer le département <strong>"{{ department.name }}"</strong> ?
                </p>
                <div class="alert alert-warning">
                    <i class="fas fa-exclamation-triangle me-2"></i>
                    <strong>Attention :</strong> Cette action est irréversible et peut affecter les employés assignés à ce département.
                </div>
            </div>
            <div class="modal-footer border-0">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">
                    Annuler
                </button>
                <form method="post" action="{{ path('admin_department_delete', {'id': department.id}) }}" style="display: inline;">
                    <input type="hidden" name="_token" value="{{ csrf_token('delete' ~ department.id) }}">
                    <button type="submit" class="btn btn-danger">
                        <i class="fas fa-trash me-2"></i>
                        Supprimer définitivement
                    </button>
                </form>
            </div>
        </div>
    </div>
</div>

<!-- Toast de confirmation -->
<div class="position-fixed bottom-0 end-0 p-3" style="z-index: 1100;">
    <div class="toast" id="changesDetectedToast" role="alert" aria-live="assertive" aria-atomic="true">
        <div class="toast-header">
            <i class="fas fa-exclamation-circle text-warning me-2"></i>
            <strong class="me-auto">Modifications détectées</strong>
            <button type="button" class="btn-close" data-bs-dismiss="toast"></button>
        </div>
        <div class="toast-body">
            Vous avez des modifications non sauvegardées.
        </div>
    </div>
</div>
{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const form = document.getElementById('editForm');
            const saveBtn = document.getElementById('saveBtn');
            const changesDetectedToast = new bootstrap.Toast(document.getElementById('changesDetectedToast'));
            let hasChanges = false;
            let originalValues = {};

            // Stocker les valeurs originales
            form.querySelectorAll('input, select, textarea').forEach(field => {
                if (field.hasAttribute('data-original')) {
                    originalValues[field.name] = field.getAttribute('data-original');
                }
            });

            // Détecter les changements
            function detectChanges() {
                let changedFields = [];
                
                form.querySelectorAll('input, select, textarea').forEach(field => {
                    if (field.hasAttribute('data-original')) {
                        let currentValue = field.type === 'checkbox' ? (field.checked ? '1' : '0') : field.value;
                        let originalValue = field.getAttribute('data-original');
                        
                        if (currentValue !== originalValue) {
                            changedFields.push(field);
                            field.closest('.mb-4').classList.add('changed-field');
                        } else {
                            field.closest('.mb-4').classList.remove('changed-field');
                        }
                    }
                });

                if (changedFields.length > 0 && !hasChanges) {
                    hasChanges = true;
                    saveBtn.innerHTML = '<i class="fas fa-save me-2"></i>Enregistrer les modifications <span class="badge bg-light text-dark ms-2">' + changedFields.length + '</span>';
                    changesDetectedToast.show();
                } else if (changedFields.length === 0 && hasChanges) {
                    hasChanges = false;
                    saveBtn.innerHTML = '<i class="fas fa-save me-2"></i>Enregistrer les modifications';
                }
            }

            // Écouter les changements sur tous les champs
            form.querySelectorAll('input, select, textarea').forEach(field => {
                field.addEventListener('input', detectChanges);
                field.addEventListener('change', detectChanges);
            });

            // Validation du formulaire
            form.addEventListener('submit', function(event) {
                if (!form.checkValidity()) {
                    event.preventDefault();
                    event.stopPropagation();
                }
                form.classList.add('was-validated');
            });

            // Avertissement avant de quitter la page si des changements non sauvegardés
            window.addEventListener('beforeunload', function(e) {
                if (hasChanges) {
                    e.preventDefault();
                    e.returnValue = '';
                }
            });

            // Animation sur les champs modifiés
            const observer = new MutationObserver(function(mutations) {
                mutations.forEach(function(mutation) {
                    if (mutation.type === 'attributes' && mutation.attributeName === 'class') {
                        const target = mutation.target;
                        if (target.classList.contains('changed-field')) {
                            target.style.transform = 'scale(1.02)';
                            target.style.transition = 'transform 0.3s ease';
                            setTimeout(() => {
                                target.style.transform = 'scale(1)';
                            }, 300);
                        }
                    }
                });
            });

            // Observer les changements de classe sur les conteneurs de champs
            form.querySelectorAll('.mb-4').forEach(container => {
                observer.observe(container, { attributes: true, attributeFilter: ['class'] });
            });

            // Auto-save draft (simulation)
            let autoSaveTimer;
            function scheduleAutoSave() {
                clearTimeout(autoSaveTimer);
                autoSaveTimer = setTimeout(() => {
                    if (hasChanges) {
                        // Simulation d'auto-save
                        console.log('Auto-save draft...');
                    }
                }, 30000); // 30 secondes
            }

            form.addEventListener('input', scheduleAutoSave);
        });
    </script>
{% endblock %}