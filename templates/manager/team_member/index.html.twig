{% extends 'base.html.twig' %}

{% block title %}Gestion des Membres d'Équipe - HR Flow{% endblock %}

{% block stylesheets %}
    {{ parent() }}
    <style>
        .page-header {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            padding: 2rem 0;
            margin-bottom: 2rem;
        }
        
        .stats-card {
            background: white;
            border-radius: 10px;
            padding: 1.5rem;
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
            border-left: 4px solid #667eea;
            transition: transform 0.2s ease;
        }
        
        .stats-card:hover {
            transform: translateY(-2px);
        }
        
        .team-card {
            background: white;
            border-radius: 15px;
            padding: 1.5rem;
            margin-bottom: 1.5rem;
            box-shadow: 0 4px 15px rgba(0,0,0,0.1);
            border: 1px solid #e9ecef;
            transition: all 0.3s ease;
        }
        
        .team-card:hover {
            transform: translateY(-3px);
            box-shadow: 0 8px 25px rgba(0,0,0,0.15);
        }
        
        .team-header {
            border-bottom: 2px solid #f8f9fa;
            padding-bottom: 1rem;
            margin-bottom: 1rem;
        }
        
        .team-name {
            color: #495057;
            font-weight: 600;
            font-size: 1.3rem;
            margin-bottom: 0.5rem;
        }
        
        .team-description {
            color: #6c757d;
            font-size: 0.95rem;
        }
        
        .member-row {
            display: flex;
            align-items: center;
            padding: 0.75rem;
            margin: 0.5rem 0;
            background: #f8f9fa;
            border-radius: 8px;
            transition: background-color 0.2s ease;
        }
        
        .member-row:hover {
            background: #e9ecef;
        }
        
        .member-avatar {
            width: 45px;
            height: 45px;
            border-radius: 50%;
            background: linear-gradient(135deg, #667eea, #764ba2);
            display: flex;
            align-items: center;
            justify-content: center;
            color: white;
            font-weight: bold;
            margin-right: 1rem;
            font-size: 1.1rem;
        }
        
        .member-info {
            flex: 1;
        }
        
        .member-name {
            font-weight: 600;
            color: #495057;
            margin-bottom: 0.2rem;
        }
        
        .member-position {
            font-size: 0.85rem;
            color: #6c757d;
        }
        
        .member-status {
            padding: 0.25rem 0.75rem;
            border-radius: 20px;
            font-size: 0.8rem;
            font-weight: 500;
            margin-right: 0.5rem;
        }
        
        .status-active {
            background: #d4edda;
            color: #155724;
        }
        
        .status-inactive {
            background: #f8d7da;
            color: #721c24;
        }
        
        .member-dates {
            font-size: 0.8rem;
            color: #6c757d;
            margin: 0.25rem 0;
        }
        
        .action-buttons {
            display: flex;
            gap: 0.5rem;
        }
        
        .btn-action {
            padding: 0.4rem 0.8rem;
            border-radius: 20px;
            font-size: 0.8rem;
            text-decoration: none;
            transition: all 0.2s ease;
            border: none;
            cursor: pointer;
        }
        
        .btn-primary {
            background: #667eea;
            color: white;
        }
        
        .btn-primary:hover {
            background: #5a6fd8;
            color: white;
            text-decoration: none;
        }
        
        .btn-success {
            background: #28a745;
            color: white;
        }
        
        .btn-success:hover {
            background: #218838;
            color: white;
            text-decoration: none;
        }
        
        .btn-warning {
            background: #ffc107;
            color: #212529;
        }
        
        .btn-warning:hover {
            background: #e0a800;
            color: #212529;
            text-decoration: none;
        }
        
        .btn-danger {
            background: #dc3545;
            color: white;
        }
        
        .btn-danger:hover {
            background: #c82333;
            color: white;
            text-decoration: none;
        }
        
        .empty-state {
            text-align: center;
            padding: 3rem 1rem;
            color: #6c757d;
        }
        
        .empty-state i {
            font-size: 4rem;
            margin-bottom: 1rem;
            color: #dee2e6;
        }
        
        .search-filter-section {
            background: white;
            border-radius: 10px;
            padding: 1.5rem;
            margin-bottom: 2rem;
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
        }
        
        .filter-row {
            display: flex;
            gap: 1rem;
            align-items: end;
            flex-wrap: wrap;
        }
        
        .filter-group {
            flex: 1;
            min-width: 200px;
        }
        
        .form-label {
            font-weight: 500;
            color: #495057;
            margin-bottom: 0.5rem;
        }
        
        .form-control, .form-select {
            border: 1px solid #ced4da;
            border-radius: 8px;
            padding: 0.6rem;
            transition: border-color 0.2s ease;
        }
        
        .form-control:focus, .form-select:focus {
            border-color: #667eea;
            box-shadow: 0 0 0 0.2rem rgba(102, 126, 234, 0.25);
        }
        
        .alert {
            border-radius: 10px;
            border: none;
            padding: 1rem 1.5rem;
        }
        
        .alert-success {
            background: #d4edda;
            color: #155724;
        }
        
        .alert-danger {
            background: #f8d7da;
            color: #721c24;
        }
        
        .alert-info {
            background: #d1ecf1;
            color: #0c5460;
        }
        
        @media (max-width: 768px) {
            .member-row {
                flex-direction: column;
                align-items: flex-start;
                text-align: left;
            }
            
            .member-avatar {
                margin-bottom: 0.5rem;
            }
            
            .action-buttons {
                margin-top: 0.5rem;
                justify-content: center;
                width: 100%;
            }
            
            .filter-row {
                flex-direction: column;
            }
            
            .filter-group {
                min-width: 100%;
            }
        }
    </style>
{% endblock %}

{% block body %}
<div class="page-header">
    <div class="container">
        <div class="row align-items-center">
            <div class="col-md-8">
                <h1 class="mb-2">
                    <i class="fas fa-users me-3"></i>
                    Gestion des Membres d'Équipe
                </h1>
                <p class="mb-0 opacity-75">
                    Gérez les membres de vos équipes et leurs affectations
                </p>
            </div>
            <div class="col-md-4 text-md-end">
                <a href="{{ path('manager_team_member_new') }}" class="btn btn-light btn-lg">
                    <i class="fas fa-plus me-2"></i>
                    Ajouter un Membre
                </a>
            </div>
        </div>
    </div>
</div>

<div class="container">
    <!-- Messages Flash -->
    {% for type, messages in app.flashes %}
        {% for message in messages %}
            <div class="alert alert-{{ type == 'error' ? 'danger' : type }} alert-dismissible fade show" role="alert">
                {{ message }}
                <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
            </div>
        {% endfor %}
    {% endfor %}

    <!-- Statistiques -->
    <div class="row mb-4">
        <div class="col-md-3">
            <div class="stats-card text-center">
                <h3 class="text-primary mb-1">{{ stats.totalMembers ?? 0 }}</h3>
                <p class="text-muted mb-0">Total Membres</p>
            </div>
        </div>
        <div class="col-md-3">
            <div class="stats-card text-center">
                <h3 class="text-success mb-1">{{ stats.activeMembers ?? 0 }}</h3>
                <p class="text-muted mb-0">Membres Actifs</p>
            </div>
        </div>
        <div class="col-md-3">
            <div class="stats-card text-center">
                <h3 class="text-info mb-1">{{ stats.totalTeams ?? 0 }}</h3>
                <p class="text-muted mb-0">Équipes Gérées</p>
            </div>
        </div>
        <div class="col-md-3">
            <div class="stats-card text-center">
                <h3 class="text-warning mb-1">{{ stats.pendingRequests ?? 0 }}</h3>
                <p class="text-muted mb-0">Demandes en Attente</p>
            </div>
        </div>
    </div>

    <!-- Filtres et Recherche -->
    <div class="search-filter-section">
        <form method="GET" class="filter-form">
            <div class="filter-row">
                <div class="filter-group">
                    <label class="form-label">Rechercher un membre</label>
                    <input type="text" class="form-control" name="search" 
                           value="{{ app.request.query.get('search') }}" 
                           placeholder="Nom, prénom, email...">
                </div>
                <div class="filter-group">
                    <label class="form-label">Équipe</label>
                    <select class="form-select" name="team">
                        <option value="">Toutes les équipes</option>
                        {% for team in managedTeams %}
                            <option value="{{ team.id }}" 
                                    {{ app.request.query.get('team') == team.id ? 'selected' : '' }}>
                                {{ team.name }}
                            </option>
                        {% endfor %}
                    </select>
                </div>
                <div class="filter-group">
                    <label class="form-label">Statut</label>
                    <select class="form-select" name="status">
                        <option value="">Tous les statuts</option>
                        <option value="active" {{ app.request.query.get('status') == 'active' ? 'selected' : '' }}>
                            Actifs
                        </option>
                        <option value="inactive" {{ app.request.query.get('status') == 'inactive' ? 'selected' : '' }}>
                            Inactifs
                        </option>
                    </select>
                </div>
                <div class="filter-group">
                    <button type="submit" class="btn btn-primary">
                        <i class="fas fa-search me-1"></i>
                        Filtrer
                    </button>
                    <a href="{{ path('manager_team_member_index') }}" class="btn btn-outline-secondary ms-2">
                        <i class="fas fa-times me-1"></i>
                        Réinitialiser
                    </a>
                </div>
            </div>
        </form>
    </div>

    <!-- Liste des Équipes et Membres -->
    {% if teamMembers is defined and teamMembers|length > 0 %}
        {% set currentTeam = null %}
        
        {% for teamMember in teamMembers %}
            {% if currentTeam != teamMember.team.id %}
                {% set currentTeam = teamMember.team.id %}
                
                {% if not loop.first %}
                    </div> <!-- Fermeture de la team-card précédente -->
                {% endif %}
                
                <div class="team-card">
                    <div class="team-header">
                        <div class="row align-items-center">
                            <div class="col-md-8">
                                <div class="team-name">
                                    <i class="fas fa-users-cog me-2 text-primary"></i>
                                    {{ teamMember.team.name }}
                                </div>
                                {% if teamMember.team.description %}
                                    <div class="team-description">
                                        {{ teamMember.team.description }}
                                    </div>
                                {% endif %}
                            </div>
                            <div class="col-md-4 text-md-end">
                                <small class="text-muted">
                                    <i class="fas fa-calendar me-1"></i>
                                    Créée le {{ teamMember.team.createdAt|date('d/m/Y') }}
                                </small>
                            </div>
                        </div>
                    </div>
            {% endif %}
            
            <div class="member-row">
                <div class="member-avatar">
                    {{ teamMember.user.firstName|first|upper }}{{ teamMember.user.lastName|first|upper }}
                </div>
                
                <div class="member-info">
                    <div class="member-name">
                        {{ teamMember.user.firstName }} {{ teamMember.user.lastName }}
                    </div>
                    <div class="member-position">
                        <i class="fas fa-briefcase me-1"></i>
                        {{ teamMember.user.position ?? 'Non défini' }}
                        •
                        <i class="fas fa-envelope me-1"></i>
                        {{ teamMember.user.email }}
                    </div>
                    <div class="member-dates">
                        <i class="fas fa-sign-in-alt me-1"></i>
                        Rejoint le {{ teamMember.joinedAt|date('d/m/Y') }}
                        {% if teamMember.leftAt %}
                            • <i class="fas fa-sign-out-alt me-1"></i>
                            Quitté le {{ teamMember.leftAt|date('d/m/Y') }}
                        {% endif %}
                    </div>
                </div>
                
                <div class="member-status-actions">
                    <span class="member-status {{ teamMember.isActive ? 'status-active' : 'status-inactive' }}">
                        <i class="fas fa-{{ teamMember.isActive ? 'check-circle' : 'times-circle' }} me-1"></i>
                        {{ teamMember.isActive ? 'Actif' : 'Inactif' }}
                    </span>
                </div>
                
                <div class="action-buttons">
                    <a href="{{ path('manager_team_member_show', {'id': teamMember.id}) }}" 
                       class="btn-action btn-primary" title="Voir les détails">
                        <i class="fas fa-eye"></i>
                    </a>
                    
                    <a href="{{ path('manager_team_member_edit', {'id': teamMember.id}) }}" 
                       class="btn-action btn-warning" title="Modifier">
                        <i class="fas fa-edit"></i>
                    </a>
                    
                    <!-- Remplacez cette section dans votre template : -->
                    {% if teamMember.isActive %}
                        <button type="button" class="btn-action btn-danger" 
                                onclick="confirmDeactivation({{ teamMember.id }})"
                                title="Désactiver">
                            <i class="fas fa-user-times"></i>
                        </button>
                    {% else %}
                        <button type="button" class="btn-action btn-success" 
                                onclick="confirmReactivation({{ teamMember.id }})"
                                title="Réactiver">
                            <i class="fas fa-user-check"></i>
                        </button>
                    {% endif %}
                </div>
            </div>
            
            {% if loop.last %}
                </div> <!-- Fermeture de la dernière team-card -->
            {% endif %}
        {% endfor %}
        
    {% else %}
        <!-- État vide -->
        <div class="team-card">
            <div class="empty-state">
                <i class="fas fa-users-slash"></i>
                <h4>Aucun membre d'équipe trouvé</h4>
                <p>
                    {% if app.request.query.count > 0 %}
                        Aucun membre ne correspond aux critères de recherche.
                        <br>
                        <a href="{{ path('manager_team_member_index') }}" class="btn btn-outline-primary mt-2">
                            Voir tous les membres
                        </a>
                    {% else %}
                        Vous n'avez encore aucun membre dans vos équipes.
                        <br>
                        <a href="{{ path('manager_team_member_new') }}" class="btn btn-primary mt-2">
                            <i class="fas fa-plus me-2"></i>
                            Ajouter le premier membre
                        </a>
                    {% endif %}
                </p>
            </div>
        </div>
    {% endif %}

    <!-- Pagination -->
    {% if pagination is defined and pagination.pageCount > 1 %}
        <nav aria-label="Navigation des pages" class="mt-4">
            <ul class="pagination justify-content-center">
                {% if pagination.current > 1 %}
                    <li class="page-item">
                        <a class="page-link" href="{{ path('manager_team_member_index', app.request.query.all|merge({page: pagination.current - 1})) }}">
                            Précédent
                        </a>
                    </li>
                {% endif %}
                
                {% for page in pagination.pagesInRange %}
                    <li class="page-item {{ page == pagination.current ? 'active' : '' }}">
                        <a class="page-link" href="{{ path('manager_team_member_index', app.request.query.all|merge({page: page})) }}">
                            {{ page }}
                        </a>
                    </li>
                {% endfor %}
                
                {% if pagination.current < pagination.pageCount %}
                    <li class="page-item">
                        <a class="page-link" href="{{ path('manager_team_member_index', app.request.query.all|merge({page: pagination.current + 1})) }}">
                            Suivant
                        </a>
                    </li>
                {% endif %}
            </ul>
        </nav>
    {% endif %}
</div>

<!-- Modal de Confirmation -->
<div class="modal fade" id="confirmationModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="confirmationModalTitle">Confirmer l'action</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body" id="confirmationModalBody">
                <!-- Contenu dynamique -->
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Annuler</button>
                <button type="button" class="btn btn-danger" id="confirmButton">Confirmer</button>
            </div>
        </div>
    </div>
</div>
{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <script>
        // Confirmation de désactivation
        function confirmDeactivation(memberId) {
            const modal = new bootstrap.Modal(document.getElementById('confirmationModal'));
            const title = document.getElementById('confirmationModalTitle');
            const body = document.getElementById('confirmationModalBody');
            const confirmBtn = document.getElementById('confirmButton');
            
            title.textContent = 'Désactiver le membre';
            body.innerHTML = '<p>Êtes-vous sûr de vouloir désactiver ce membre de l\'équipe ?</p><p class="text-muted">Cette action peut être annulée ultérieurement.</p>';
            confirmBtn.className = 'btn btn-danger';
            confirmBtn.textContent = 'Désactiver';
            
            confirmBtn.onclick = function() {
                // Créer et soumettre un formulaire de désactivation
                const form = document.createElement('form');
                form.method = 'POST';
                form.action = '{{ path("manager_team_member_deactivate", {"id": "__ID__"}) }}'.replace('__ID__', memberId);
                
                const csrfToken = document.createElement('input');
                csrfToken.type = 'hidden';
                csrfToken.name = '_token';
                csrfToken.value = '{{ csrf_token("deactivate") }}';
                form.appendChild(csrfToken);
                
                document.body.appendChild(form);
                form.submit();
            };
            
            modal.show();
        }
        
        // Confirmation de réactivation
        function confirmReactivation(memberId) {
        const modal = new bootstrap.Modal(document.getElementById('confirmationModal'));
        const title = document.getElementById('confirmationModalTitle');
        const body = document.getElementById('confirmationModalBody');
        const confirmBtn = document.getElementById('confirmButton');
        
        title.textContent = 'Réactiver le membre';
        body.innerHTML = '<p>Êtes-vous sûr de vouloir réactiver ce membre dans l\'équipe ?</p>';
        confirmBtn.className = 'btn btn-success';
        confirmBtn.textContent = 'Réactiver';
        
        confirmBtn.onclick = function() {
            // Créer et soumettre un formulaire de réactivation
            const form = document.createElement('form');
            form.method = 'POST';
            form.action = '{{ path("manager_team_member_reactivate", {"id": "__ID__"}) }}'.replace('__ID__', memberId);
            
            const csrfToken = document.createElement('input');
            csrfToken.type = 'hidden';
            csrfToken.name = '_token';
            csrfToken.value = '{{ csrf_token("reactivate") }}';
            form.appendChild(csrfToken);
            
            document.body.appendChild(form);
            form.submit();
        };
        
        modal.show();
    }
        
        // Auto-soumission du formulaire de filtre avec délai
        let searchTimeout;
        document.querySelector('input[name="search"]')?.addEventListener('input', function() {
            clearTimeout(searchTimeout);
            searchTimeout = setTimeout(() => {
                this.form.submit();
            }, 500);
        });
        
        // Soumission automatique des filtres select
        document.querySelectorAll('.filter-form select').forEach(select => {
            select.addEventListener('change', function() {
                this.form.submit();
            });
        });
        
        // Animation d'apparition des cartes
        document.addEventListener('DOMContentLoaded', function() {
            const cards = document.querySelectorAll('.team-card');
            cards.forEach((card, index) => {
                card.style.opacity = '0';
                card.style.transform = 'translateY(20px)';
                setTimeout(() => {
                    card.style.transition = 'all 0.5s ease';
                    card.style.opacity = '1';
                    card.style.transform = 'translateY(0)';
                }, index * 100);
            });
        });
    </script>
{% endblock %}